[gd_resource type="VisualShader" load_steps=24 format=2]

[ext_resource path="res://assets/3d/DissolveFX/DissolveNoise.tres" type="Texture" id=1]
[ext_resource path="res://assets/3d/mannequiny/materials/green/ChristmasTreeOrnament005_2K_Color.png" type="Texture" id=2]
[ext_resource path="res://assets/3d/mannequiny/materials/green/ChristmasTreeOrnament005_2K_Displacement.png" type="Texture" id=3]
[ext_resource path="res://assets/3d/mannequiny/materials/green/ChristmasTreeOrnament005_2K_Normal.png" type="Texture" id=4]
[ext_resource path="res://assets/3d/mannequiny/materials/green/ChristmasTreeOrnament005_2K_Roughness.png" type="Texture" id=5]
[ext_resource path="res://assets/3d/mannequiny/materials/green/ChristmasTreeOrnament005_2K_Metalness.png" type="Texture" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 1.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=4]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0, 1, 1, 1 )

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 6 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeInput" id=11]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 8.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=16]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
output_port_for_preview = 0
function = 15

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_15;
uniform sampler2D tex_frg_7;
uniform sampler2D tex_frg_16;
uniform sampler2D tex_frg_17;
uniform sampler2D tex_frg_18;
uniform sampler2D tex_frg_19;



void vertex() {
// Output:0

}

void fragment() {
// Texture:15
	vec4 tex_frg_15_read = texture(tex_frg_15, UV.xy);
	vec3 n_out15p0 = tex_frg_15_read.rgb;
	float n_out15p1 = tex_frg_15_read.a;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Input:3
	float n_out3p0 = TIME;

// ScalarFunc:4
	float n_out4p0 = sin(n_out3p0);

// ScalarOp:5
	float n_in5p1 = 8.00000;
	float n_out5p0 = n_out4p0 / n_in5p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out5p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// Texture:16
	vec4 tex_frg_16_read = texture(tex_frg_16, UV.xy);
	vec3 n_out16p0 = tex_frg_16_read.rgb;
	float n_out16p1 = tex_frg_16_read.a;

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, UV.xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// ScalarOp:10
	float n_in10p1 = 0.05000;
	float n_out10p0 = n_out8p0 - n_in10p1;

// ScalarOp:11
	float n_in11p0 = 1.00000;
	float n_out11p0 = n_in11p0 - n_out10p0;

// ScalarFunc:12
	float n_out12p0 = round(n_out11p0);

// Color:14
	vec3 n_out14p0 = vec3(0.000000, 1.000000, 1.000000);
	float n_out14p1 = 1.000000;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out12p0) * n_out14p0;

// Texture:18
	vec4 tex_frg_18_read = texture(tex_frg_18, UV.xy);
	vec3 n_out18p0 = tex_frg_18_read.rgb;
	float n_out18p1 = tex_frg_18_read.a;

// Texture:19
	vec4 tex_frg_19_read = texture(tex_frg_19, UV.xy);
	vec3 n_out19p0 = tex_frg_19_read.rgb;
	float n_out19p1 = tex_frg_19_read.a;

// Output:0
	ALBEDO = n_out15p0;
	ALPHA = n_out9p0;
	METALLIC = dot(n_out16p0, vec3(0.333333, 0.333333, 0.333333));
	ROUGHNESS = dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333));
	EMISSION = n_out13p0;
	NORMALMAP = n_out18p0;
	NORMALMAP_DEPTH = dot(n_out19p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 186.971, -246 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 1780, 80 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( 80, 120 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -60, 340 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( 240, 360 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( 460, 340 )
nodes/fragment/7/node = SubResource( 15 )
nodes/fragment/7/position = Vector2( 320, 100 )
nodes/fragment/8/node = SubResource( 16 )
nodes/fragment/8/position = Vector2( 680, 260 )
nodes/fragment/9/node = SubResource( 17 )
nodes/fragment/9/position = Vector2( 940, 100 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 900, 500 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 1080, 500 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 1260, 500 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 1600, 480 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 1460, 560 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 980, -240 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 1260, -240 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 1520, -260 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( 1340, 240 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( 1560, 240 )
nodes/fragment/connections = PoolIntArray( 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 0, 5, 0, 8, 1, 9, 0, 0, 1, 8, 0, 10, 0, 10, 0, 11, 1, 11, 0, 12, 0, 12, 0, 13, 0, 14, 0, 13, 1, 13, 0, 0, 5, 15, 0, 0, 0, 16, 0, 0, 2, 17, 0, 0, 3, 18, 0, 0, 8, 19, 0, 0, 9, 3, 0, 4, 0, 4, 0, 5, 0, 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 0, 5, 0, 8, 1, 9, 0, 0, 1, 8, 0, 10, 0, 10, 0, 11, 1, 11, 0, 12, 0, 12, 0, 13, 0, 14, 0, 13, 1, 13, 0, 0, 5, 15, 0, 0, 0, 16, 0, 0, 2, 17, 0, 0, 3, 18, 0, 0, 8, 19, 0, 0, 9, 3, 0, 4, 0, 4, 0, 5, 0 )
